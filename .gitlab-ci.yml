stages:
  - build
  - dockerhub
  - clean

docker:latest:
  stage: build
  only: 
    - master
  script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker build --pull --force-rm=true --squash 
        --build-arg VCS_REF=`git rev-parse --short HEAD` 
        --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` 
        --tag=${CI_REGISTRY}/${CI_PROJECT_PATH} .
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}

docker:release:
  stage: build
  only:
    - tags
  script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker build --pull --force-rm=true --squash 
        --build-arg VCS_REF=`git rev-parse --short HEAD` 
        --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` 
        --tag=${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_REF_NAME} .
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_REF_NAME}

dockerhub:latest:
  stage: dockerhub
  except:
    - tags
  before_script:
    - apk add --update --no-cache curl
  script:
    - curl -s -H 'Content-Type:application/json' --data '{"build":true}' -X POST https://registry.hub.docker.com/u/datacore/redis/trigger/${DOCKERHUB_TOKEN}/ > /dev/null
  when: manual

dockerhub:release:
  stage: dockerhub
  only:
    - tags
  before_script:
    - apk add --update --no-cache curl
  script:
    - curl -s -H 'Content-Type:application/json' --data "{\"source_type\":\"Tag\",\"source_name\":\"${CI_COMMIT_REF_NAME}\"}" -X POST https://registry.hub.docker.com/u/datacore/redis/trigger/${DOCKERHUB_TOKEN}/ > /dev/null
  when: manual

docker:clean:
  stage: clean
  when: always
  script:
    - |
      CONTAINERS=$(docker ps -a | grep runner | grep project | grep concurrent)
      echo Clearing docker cache...
      for container in $(docker ps -a | grep runner | grep project-${CI_PROJECT_ID} | grep concurrent | awk '{print $1}'); do
        docker rm -v $container
      done
